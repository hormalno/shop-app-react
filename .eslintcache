[{"C:\\Users\\yasen.ivanov\\Documents\\shop-app-react\\shop-app-react\\src\\index.js":"1","C:\\Users\\yasen.ivanov\\Documents\\shop-app-react\\shop-app-react\\src\\reportWebVitals.js":"2","C:\\Users\\yasen.ivanov\\Documents\\shop-app-react\\shop-app-react\\src\\App.js":"3","C:\\Users\\yasen.ivanov\\Documents\\shop-app-react\\shop-app-react\\src\\Components\\Home.js":"4","C:\\Users\\yasen.ivanov\\Documents\\shop-app-react\\shop-app-react\\src\\Components\\header\\Header.js":"5","C:\\Users\\yasen.ivanov\\Documents\\shop-app-react\\shop-app-react\\src\\Components\\main\\Main.js":"6","C:\\Users\\yasen.ivanov\\Documents\\shop-app-react\\shop-app-react\\src\\Components\\main\\InfoBox2.js":"7","C:\\Users\\yasen.ivanov\\Documents\\shop-app-react\\shop-app-react\\src\\Components\\main\\InfoBox.js":"8","C:\\Users\\yasen.ivanov\\Documents\\shop-app-react\\shop-app-react\\src\\Components\\main\\Carousel2.js":"9","C:\\Users\\yasen.ivanov\\Documents\\shop-app-react\\shop-app-react\\src\\Components\\header\\NavBtn.js":"10","C:\\Users\\yasen.ivanov\\Documents\\shop-app-react\\shop-app-react\\src\\Components\\header\\MegaMenu.js":"11"},{"size":1284,"mtime":1621254719564,"results":"12","hashOfConfig":"13"},{"size":375,"mtime":1610959009301,"results":"14","hashOfConfig":"13"},{"size":314,"mtime":1621254719543,"results":"15","hashOfConfig":"13"},{"size":347,"mtime":1617963636271,"results":"16","hashOfConfig":"13"},{"size":5138,"mtime":1613935425464,"results":"17","hashOfConfig":"13"},{"size":3614,"mtime":1621255407976,"results":"18","hashOfConfig":"13"},{"size":1505,"mtime":1621254719551,"results":"19","hashOfConfig":"13"},{"size":4239,"mtime":1621254719550,"results":"20","hashOfConfig":"13"},{"size":1983,"mtime":1621262231336,"results":"21","hashOfConfig":"13"},{"size":455,"mtime":1613765688252,"results":"22","hashOfConfig":"13"},{"size":8253,"mtime":1613770162330,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1kswmea",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},"C:\\Users\\yasen.ivanov\\Documents\\shop-app-react\\shop-app-react\\src\\index.js",[],["49","50"],"C:\\Users\\yasen.ivanov\\Documents\\shop-app-react\\shop-app-react\\src\\reportWebVitals.js",[],"C:\\Users\\yasen.ivanov\\Documents\\shop-app-react\\shop-app-react\\src\\App.js",[],"C:\\Users\\yasen.ivanov\\Documents\\shop-app-react\\shop-app-react\\src\\Components\\Home.js",[],"C:\\Users\\yasen.ivanov\\Documents\\shop-app-react\\shop-app-react\\src\\Components\\header\\Header.js",[],"C:\\Users\\yasen.ivanov\\Documents\\shop-app-react\\shop-app-react\\src\\Components\\main\\Main.js",[],"C:\\Users\\yasen.ivanov\\Documents\\shop-app-react\\shop-app-react\\src\\Components\\main\\InfoBox2.js",[],"C:\\Users\\yasen.ivanov\\Documents\\shop-app-react\\shop-app-react\\src\\Components\\main\\InfoBox.js",["51"],"import React, { Component } from 'react';\r\nimport Container from 'react-bootstrap/Container'\r\nimport Card from 'react-bootstrap/Card'\r\nimport Carousel from 'react-bootstrap/Carousel'\r\nimport image from './infobox.jpg'\r\n\r\n\r\nclass InfoBox extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            slideIndex: 0,\r\n            cards: [\r\n                {title: 'a', imgSrc: 'http://placehold.it/380?text=1'},\r\n                {title: 'b', imgSrc: 'http://placehold.it/380?text=2'},\r\n                {title: 'c', imgSrc: 'http://placehold.it/380?text=3'},\r\n                {title: 'd', imgSrc: 'http://placehold.it/380?text=4'}\r\n            ],\r\n            cards2: [\r\n                {title: 'e', imgSrc: 'http://placehold.it/380?text=4'},\r\n                {title: 'f', imgSrc: 'http://placehold.it/380?text=4'},\r\n                {title: 'g', imgSrc: 'http://placehold.it/380?text=4'},\r\n                {title: 'h', imgSrc: 'http://placehold.it/380?text=4'}\r\n            ]\r\n        };\r\n\r\n        this.handleSelect = this.handleSelect.bind(this);\r\n    }\r\n\r\n    handleSelect(selectedIndex, e) {\r\n        this.setState({\r\n            slideIndex: selectedIndex\r\n        })\r\n        console.log(selectedIndex)\r\n    };\r\n\r\n    renderCard(item,index) {\r\n        return (\r\n            <Card style={{width: '16rem'}} key={1}>\r\n                <Card.Img variant=\"top\" src={image} />\r\n                <Card.ImgOverlay><a href='/' className='btn btn-primary'>Quick view</a></Card.ImgOverlay>\r\n                <Card.Body>\r\n                    <Card.Title>Card {item.title}</Card.Title>\r\n                    <Card.Text>\r\n                        Living room group\r\n                    </Card.Text>\r\n                    <Card.Text>\r\n                        <small className=\"text-muted\">5000 EUR</small>\r\n                    </Card.Text>\r\n                </Card.Body>\r\n            </Card>\r\n        )\r\n    }\r\n\r\n    renderCards() {\r\n        const cards = this.state.cards.map((item,index) => {\r\n            return this.renderCard(item,index);\r\n        })\r\n\r\n        const cards2 = this.state.cards2.map((item,index) => {\r\n            return this.renderCard(item,index);\r\n        })\r\n\r\n        return (<div className=\"carousel-inner\" role=\"listbox\">\r\n                    <Carousel.Item active>\r\n                        {cards}\r\n                    </Carousel.Item>\r\n                    <Carousel.Item>\r\n                        {cards2}\r\n                    </Carousel.Item>\r\n                </div>)\r\n            }\r\n\r\n    render() {\r\n        return (\r\n            // <Container className=\"text-center my-3\">\r\n            //     <h2 className=\"font-weight-light\">Bootstrap 4 - Multi Item Carousel</h2>\r\n            //     <Carousel id=\"multi-item\" className=\"carousel slide carousel-multi-item\" data-ride=\"carousel\">\r\n            //         <div className=\"controls-top\">\r\n            //             <a className=\"btn-floating\" href=\"#multi-item\" data-slide=\"prev\"><i className=\"fas fa-chevron-left\"></i>Prev</a>\r\n            //             <a className=\"btn-floating\" href=\"#multi-item\" data-slide=\"next\">Next<i className=\"fas fa-chevron-right\"></i></a>\r\n            //         </div>\r\n            //         <ol className=\"carousel-indicators\">\r\n            //             <li data-target=\"#multi-item\" data-slide-to=\"0\" className=\"active\"></li>\r\n            //             <li data-target=\"#multi-item\" data-slide-to=\"1\"></li>\r\n            //         </ol>\r\n            //         {this.renderCards()}\r\n            //     </Carousel>\r\n            // </Container>\r\n            <Card style={{width: '16rem'}} key={1}>\r\n                <Card.Img variant=\"top\" src={image} />\r\n                <Card.ImgOverlay><a href='/' className='btn btn-primary'>Quick view</a></Card.ImgOverlay>\r\n                <Card.Body>\r\n                    <Card.Title>Card 1</Card.Title>\r\n                    <Card.Text>\r\n                        Living room group\r\n                    </Card.Text>\r\n                    <Card.Text>\r\n                        <small className=\"text-muted\">5000 EUR</small>\r\n                    </Card.Text>\r\n                </Card.Body>\r\n            </Card>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default InfoBox;","C:\\Users\\yasen.ivanov\\Documents\\shop-app-react\\shop-app-react\\src\\Components\\main\\Carousel2.js",["52","53","54"],"C:\\Users\\yasen.ivanov\\Documents\\shop-app-react\\shop-app-react\\src\\Components\\header\\NavBtn.js",[],"C:\\Users\\yasen.ivanov\\Documents\\shop-app-react\\shop-app-react\\src\\Components\\header\\MegaMenu.js",["55"],"import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n// import './MegaMenu.css';\r\nimport { Link } from 'react-router-dom';\r\nimport NavBtn from './NavBtn';\r\n\r\nclass MegaMenu extends Component {\r\n\r\n  \r\n  static defaultProps = {\r\n    id: null,\r\n    model: null,\r\n    style: null,\r\n    className: null,\r\n    orientation: 'horizontal'\r\n  };\r\n\r\n  static propTypes = {\r\n      id: PropTypes.string,\r\n    //   model: PropTypes.array,\r\n      style: PropTypes.object,\r\n      className: PropTypes.string,\r\n      orientation: PropTypes.string\r\n  };\r\n\r\n  constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n          activeItem: null\r\n      }\r\n      this.onLeafClick = this.onLeafClick.bind(this);\r\n  }\r\n\r\n  onLeafClick(event, item) {\r\n      if (item.disabled) {\r\n          event.preventDefault();\r\n          return;\r\n      }\r\n\r\n      if (!item.url) {\r\n          event.preventDefault();\r\n      }\r\n\r\n      if (item.command) {\r\n          item.command({\r\n              originalEvent: event,\r\n              item: item\r\n          });\r\n      }\r\n\r\n      this.setState({\r\n          activeItem: null\r\n      });\r\n  }\r\n\r\n  onCategoryMouseEnter(event, item) {\r\n      if (item.disabled) {\r\n          event.preventDefault();\r\n          return;\r\n      }\r\n\r\n      if (this.state.activeItem) {\r\n          this.setState({\r\n              activeItem: item\r\n          });\r\n      }\r\n  }\r\n\r\n  onCategoryClick(event, item) {\r\n      if (item.disabled) {\r\n          event.preventDefault();\r\n          return;\r\n      }\r\n\r\n      if (!item.url) {\r\n          event.preventDefault();\r\n      }\r\n\r\n      if (item.command) {\r\n          item.command({\r\n              originalEvent: event,\r\n              item: this.props.item\r\n          });\r\n      }\r\n\r\n      if (item.items) {\r\n          if (this.state.activeItem && this.state.activeItem === item) {\r\n              this.setState({\r\n                  activeItem: null\r\n              });\r\n          }\r\n          else {\r\n              this.setState({\r\n                  activeItem: item\r\n              });\r\n          }\r\n      }\r\n\r\n      event.preventDefault();\r\n  }\r\n\r\n  isHorizontal() {\r\n      return this.props.orientation === 'horizontal';\r\n  }\r\n\r\n  isVertical() {\r\n      return this.props.orientation === 'vertical';\r\n  }\r\n\r\n  getColumnClassName(category) {\r\n      let length = category.items ? category.items.length: 0;\r\n      let columnClass;\r\n\r\n      switch(length) {\r\n          case 2:\r\n              columnClass= 'col-6';\r\n          break;\r\n\r\n          case 3:\r\n              columnClass= 'col-4';\r\n          break;\r\n\r\n          case 4:\r\n              columnClass= 'col-3';\r\n          break;\r\n\r\n          case 6:\r\n              columnClass= 'col-2';\r\n          break;\r\n\r\n          default:\r\n              columnClass= 'col-12';\r\n          break;\r\n      }\r\n\r\n      return columnClass;\r\n  }\r\n\r\n  componentDidMount() {\r\n      if (!this.documentClickListener) {\r\n          this.documentClickListener = (event) => {\r\n              if (this.container && !this.container.contains(event.target)) {\r\n                  this.setState({activeItem: null});\r\n              }\r\n          };\r\n\r\n          document.addEventListener('click', this.documentClickListener);\r\n      }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n      if (this.documentClickListener) {\r\n          document.removeEventListener('click', this.documentClickListener);\r\n          this.documentClickListener = null;\r\n      }\r\n  }\r\n\r\n  renderSeparator(index) {\r\n      return (\r\n          <li key={'separator_' + index} className=\"divider\"></li>\r\n      );\r\n  }\r\n\r\n  renderSubmenuIcon(item) {\r\n      if (item.items) {\r\n          const className = classNames('fa fa-caret-down', {'pi-angle-down': this.isHorizontal(), 'pi-angle-right': this.isVertical()});\r\n\r\n          return (\r\n              <span className={className}></span>\r\n          );\r\n      }\r\n\r\n      return null;\r\n  }\r\n\r\n  renderSubmenuItem(item, index) {\r\n      if (item.separator) {\r\n          return this.renderSeparator(index);\r\n      } else {\r\n          const className = classNames('p-menuitem', item.className);\r\n          const linkClassName = classNames('p-menuitem-link', {'p-disabled': item.disabled});\r\n          const iconClassName = classNames(item.icon, 'p-menuitem-icon');\r\n          const icon = item.icon && <span className={iconClassName}></span>;\r\n          const label = item.label && <span className=\"p-menuitem-text\">{item.label}</span>;\r\n          let content = (\r\n              <a href={item.url || '/'} \r\n                 className={linkClassName} \r\n                 target={item.target} \r\n                 onClick={(event) => this.onLeafClick(event, item)} \r\n                 role=\"menuitem\">\r\n                  {icon}\r\n                  {label}\r\n              </a>\r\n          );\r\n\r\n          return (\r\n              <li key={item.label + '_' + index} \r\n              className={className} \r\n              style={item.style} \r\n              role=\"none\">\r\n                  {content}\r\n              </li>\r\n          );\r\n      }\r\n  }\r\n\r\n  renderSubmenu(submenu) {\r\n      const className = classNames('p-megamenu-submenu-header', {'p-disabled': submenu.disabled}, submenu.className);\r\n      const items = submenu.items.map((item, index) => {\r\n          return this.renderSubmenuItem(item, index);\r\n      });\r\n\r\n      return (<React.Fragment>\r\n                {items}\r\n              </React.Fragment>);\r\n  }\r\n\r\n  renderSubmenus(column) {\r\n      return (\r\n          column.map((submenu, index) => {\r\n              return this.renderSubmenu(submenu, index);\r\n          })\r\n      );\r\n  }\r\n\r\n  renderColumn(category, column, index, columnClassName) {\r\n      const submenus = this.renderSubmenus(column);\r\n      const className = classNames('dropdown-item', columnClassName)\r\n\r\n      return (\r\n          <div key={category.label + '_column_' + index} className={className}>\r\n              <div className=\"p-megamenu-submenu\">\r\n                  {submenus}\r\n              </div>\r\n          </div>\r\n      );\r\n  }\r\n\r\n  renderColumns(category) {\r\n      if (category.items) {\r\n          const columnClassName = this.getColumnClassName(category);\r\n\r\n          return (\r\n              category.items.map((column, index) => {\r\n                  return this.renderColumn(category, column, index, columnClassName);\r\n              })\r\n          );\r\n      }\r\n\r\n      return null;\r\n  }\r\n\r\n  renderCategoryPanel(category) {\r\n      if (category.items) {\r\n        const columns = this.renderColumns(category);\r\n\r\n        return (\r\n            <div className=\"dropdown-menu show\">\r\n                <div className=\"row\">\r\n                    {columns}\r\n                </div>\r\n            </div>\r\n        );\r\n      }\r\n\r\n      return null;\r\n  }\r\n\r\n  renderCategory(props, index) {\r\n      const category = props.model\r\n      const linkClassName = classNames('menuitem-link', {'p-disabled': category.disabled});\r\n      const iconClassName = classNames('fa', category.icon);\r\n      const icon = category.icon && <span className={iconClassName}></span>;\r\n      const label = props.label && <span className=\"p-menuitem-text\">{props.label}</span>;\r\n      const submenuIcon = this.renderSubmenuIcon(category);\r\n      const panel = () => {\r\n        if (this.state.activeItem) {\r\n            return this.renderCategoryPanel(category);\r\n        } else {\r\n            return null;\r\n        }\r\n      };\r\n        \r\n\r\n      return (\r\n          <NavBtn key={props.label + '_' + index} \r\n            onMouseEnter={e => this.onCategoryMouseEnter(e, category)} >\r\n            <Link to={category.url || '/'} \r\n            className={linkClassName} \r\n            target={category.target} \r\n            onClick={e => this.onCategoryClick(e, category)}\r\n            aria-haspopup={category.items != null} \r\n            aria-expanded=\"true\">\r\n                {icon}\r\n                {label}\r\n                {submenuIcon}\r\n            </Link>\r\n            {panel()}\r\n          </NavBtn>\r\n      );\r\n  }\r\n\r\n  renderMenu() {\r\n      if (this.props.model) {\r\n        return this.renderCategory(this.props);\r\n      }\r\n\r\n      return null;\r\n  }\r\n\r\n\r\n  render() {\r\n    const menu = this.renderMenu();\r\n    console.log(this.state.activeItem)\r\n    return menu;\r\n  }\r\n}\r\n\r\nexport default MegaMenu;  ",{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":2,"column":8,"nodeType":"62","messageId":"63","endLine":2,"endColumn":17},{"ruleId":"60","severity":1,"message":"64","line":2,"column":8,"nodeType":"62","messageId":"63","endLine":2,"endColumn":13},{"ruleId":"60","severity":1,"message":"65","line":20,"column":11,"nodeType":"62","messageId":"63","endLine":20,"endColumn":16},{"ruleId":"60","severity":1,"message":"66","line":46,"column":14,"nodeType":"62","messageId":"63","endLine":46,"endColumn":26},{"ruleId":"60","severity":1,"message":"67","line":209,"column":13,"nodeType":"62","messageId":"63","endLine":209,"endColumn":22},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'Image' is defined but never used.","'props' is assigned a value but never used.","'renderSlides' is defined but never used.","'className' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]