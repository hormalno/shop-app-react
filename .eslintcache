[{"C:\\Users\\yasen.ivanov\\Documents\\shop-app-react\\shop-app-react\\src\\index.js":"1","C:\\Users\\yasen.ivanov\\Documents\\shop-app-react\\shop-app-react\\src\\App.js":"2","C:\\Users\\yasen.ivanov\\Documents\\shop-app-react\\shop-app-react\\src\\reportWebVitals.js":"3","C:\\Users\\yasen.ivanov\\Documents\\shop-app-react\\shop-app-react\\src\\Components\\Home.js":"4","C:\\Users\\yasen.ivanov\\Documents\\shop-app-react\\shop-app-react\\src\\Components\\styled_components\\style_components.js":"5","C:\\Users\\yasen.ivanov\\Documents\\shop-app-react\\shop-app-react\\src\\Components\\header\\Header.js":"6","C:\\Users\\yasen.ivanov\\Documents\\shop-app-react\\shop-app-react\\src\\Components\\header\\MegaMenu.js":"7","C:\\Users\\yasen.ivanov\\Documents\\shop-app-react\\shop-app-react\\src\\Components\\header\\NavBtn.js":"8","C:\\Users\\yasen.ivanov\\Documents\\shop-app-react\\shop-app-react\\src\\Components\\main\\Main.js":"9","C:\\Users\\yasen.ivanov\\Documents\\shop-app-react\\shop-app-react\\src\\Components\\main\\LazyLoadedCarousel.js":"10","C:\\Users\\yasen.ivanov\\Documents\\shop-app-react\\shop-app-react\\src\\Components\\main\\InfoBox.js":"11"},{"size":648,"mtime":1611224369327,"results":"12","hashOfConfig":"13"},{"size":361,"mtime":1613742785260,"results":"14","hashOfConfig":"13"},{"size":375,"mtime":1610959009301,"results":"15","hashOfConfig":"13"},{"size":347,"mtime":1617963636271,"results":"16","hashOfConfig":"13"},{"size":761,"mtime":1611224889909,"results":"17","hashOfConfig":"13"},{"size":5138,"mtime":1613935425464,"results":"18","hashOfConfig":"13"},{"size":8253,"mtime":1613770162330,"results":"19","hashOfConfig":"13"},{"size":455,"mtime":1613765688252,"results":"20","hashOfConfig":"13"},{"size":5841,"mtime":1619857080137,"results":"21","hashOfConfig":"13"},{"size":705,"mtime":1619855905059,"results":"22","hashOfConfig":"13"},{"size":513,"mtime":1619856926782,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1kswmea",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\yasen.ivanov\\Documents\\shop-app-react\\shop-app-react\\src\\index.js",[],["49","50"],"C:\\Users\\yasen.ivanov\\Documents\\shop-app-react\\shop-app-react\\src\\App.js",[],"C:\\Users\\yasen.ivanov\\Documents\\shop-app-react\\shop-app-react\\src\\reportWebVitals.js",[],"C:\\Users\\yasen.ivanov\\Documents\\shop-app-react\\shop-app-react\\src\\Components\\Home.js",[],"C:\\Users\\yasen.ivanov\\Documents\\shop-app-react\\shop-app-react\\src\\Components\\styled_components\\style_components.js",[],["51","52"],"C:\\Users\\yasen.ivanov\\Documents\\shop-app-react\\shop-app-react\\src\\Components\\header\\Header.js",[],"C:\\Users\\yasen.ivanov\\Documents\\shop-app-react\\shop-app-react\\src\\Components\\header\\MegaMenu.js",["53"],"import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n// import './MegaMenu.css';\r\nimport { Link } from 'react-router-dom';\r\nimport NavBtn from './NavBtn';\r\n\r\nclass MegaMenu extends Component {\r\n\r\n  \r\n  static defaultProps = {\r\n    id: null,\r\n    model: null,\r\n    style: null,\r\n    className: null,\r\n    orientation: 'horizontal'\r\n  };\r\n\r\n  static propTypes = {\r\n      id: PropTypes.string,\r\n    //   model: PropTypes.array,\r\n      style: PropTypes.object,\r\n      className: PropTypes.string,\r\n      orientation: PropTypes.string\r\n  };\r\n\r\n  constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n          activeItem: null\r\n      }\r\n      this.onLeafClick = this.onLeafClick.bind(this);\r\n  }\r\n\r\n  onLeafClick(event, item) {\r\n      if (item.disabled) {\r\n          event.preventDefault();\r\n          return;\r\n      }\r\n\r\n      if (!item.url) {\r\n          event.preventDefault();\r\n      }\r\n\r\n      if (item.command) {\r\n          item.command({\r\n              originalEvent: event,\r\n              item: item\r\n          });\r\n      }\r\n\r\n      this.setState({\r\n          activeItem: null\r\n      });\r\n  }\r\n\r\n  onCategoryMouseEnter(event, item) {\r\n      if (item.disabled) {\r\n          event.preventDefault();\r\n          return;\r\n      }\r\n\r\n      if (this.state.activeItem) {\r\n          this.setState({\r\n              activeItem: item\r\n          });\r\n      }\r\n  }\r\n\r\n  onCategoryClick(event, item) {\r\n      if (item.disabled) {\r\n          event.preventDefault();\r\n          return;\r\n      }\r\n\r\n      if (!item.url) {\r\n          event.preventDefault();\r\n      }\r\n\r\n      if (item.command) {\r\n          item.command({\r\n              originalEvent: event,\r\n              item: this.props.item\r\n          });\r\n      }\r\n\r\n      if (item.items) {\r\n          if (this.state.activeItem && this.state.activeItem === item) {\r\n              this.setState({\r\n                  activeItem: null\r\n              });\r\n          }\r\n          else {\r\n              this.setState({\r\n                  activeItem: item\r\n              });\r\n          }\r\n      }\r\n\r\n      event.preventDefault();\r\n  }\r\n\r\n  isHorizontal() {\r\n      return this.props.orientation === 'horizontal';\r\n  }\r\n\r\n  isVertical() {\r\n      return this.props.orientation === 'vertical';\r\n  }\r\n\r\n  getColumnClassName(category) {\r\n      let length = category.items ? category.items.length: 0;\r\n      let columnClass;\r\n\r\n      switch(length) {\r\n          case 2:\r\n              columnClass= 'col-6';\r\n          break;\r\n\r\n          case 3:\r\n              columnClass= 'col-4';\r\n          break;\r\n\r\n          case 4:\r\n              columnClass= 'col-3';\r\n          break;\r\n\r\n          case 6:\r\n              columnClass= 'col-2';\r\n          break;\r\n\r\n          default:\r\n              columnClass= 'col-12';\r\n          break;\r\n      }\r\n\r\n      return columnClass;\r\n  }\r\n\r\n  componentDidMount() {\r\n      if (!this.documentClickListener) {\r\n          this.documentClickListener = (event) => {\r\n              if (this.container && !this.container.contains(event.target)) {\r\n                  this.setState({activeItem: null});\r\n              }\r\n          };\r\n\r\n          document.addEventListener('click', this.documentClickListener);\r\n      }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n      if (this.documentClickListener) {\r\n          document.removeEventListener('click', this.documentClickListener);\r\n          this.documentClickListener = null;\r\n      }\r\n  }\r\n\r\n  renderSeparator(index) {\r\n      return (\r\n          <li key={'separator_' + index} className=\"divider\"></li>\r\n      );\r\n  }\r\n\r\n  renderSubmenuIcon(item) {\r\n      if (item.items) {\r\n          const className = classNames('fa fa-caret-down', {'pi-angle-down': this.isHorizontal(), 'pi-angle-right': this.isVertical()});\r\n\r\n          return (\r\n              <span className={className}></span>\r\n          );\r\n      }\r\n\r\n      return null;\r\n  }\r\n\r\n  renderSubmenuItem(item, index) {\r\n      if (item.separator) {\r\n          return this.renderSeparator(index);\r\n      } else {\r\n          const className = classNames('p-menuitem', item.className);\r\n          const linkClassName = classNames('p-menuitem-link', {'p-disabled': item.disabled});\r\n          const iconClassName = classNames(item.icon, 'p-menuitem-icon');\r\n          const icon = item.icon && <span className={iconClassName}></span>;\r\n          const label = item.label && <span className=\"p-menuitem-text\">{item.label}</span>;\r\n          let content = (\r\n              <a href={item.url || '/'} \r\n                 className={linkClassName} \r\n                 target={item.target} \r\n                 onClick={(event) => this.onLeafClick(event, item)} \r\n                 role=\"menuitem\">\r\n                  {icon}\r\n                  {label}\r\n              </a>\r\n          );\r\n\r\n          return (\r\n              <li key={item.label + '_' + index} \r\n              className={className} \r\n              style={item.style} \r\n              role=\"none\">\r\n                  {content}\r\n              </li>\r\n          );\r\n      }\r\n  }\r\n\r\n  renderSubmenu(submenu) {\r\n      const className = classNames('p-megamenu-submenu-header', {'p-disabled': submenu.disabled}, submenu.className);\r\n      const items = submenu.items.map((item, index) => {\r\n          return this.renderSubmenuItem(item, index);\r\n      });\r\n\r\n      return (<React.Fragment>\r\n                {items}\r\n              </React.Fragment>);\r\n  }\r\n\r\n  renderSubmenus(column) {\r\n      return (\r\n          column.map((submenu, index) => {\r\n              return this.renderSubmenu(submenu, index);\r\n          })\r\n      );\r\n  }\r\n\r\n  renderColumn(category, column, index, columnClassName) {\r\n      const submenus = this.renderSubmenus(column);\r\n      const className = classNames('dropdown-item', columnClassName)\r\n\r\n      return (\r\n          <div key={category.label + '_column_' + index} className={className}>\r\n              <div className=\"p-megamenu-submenu\">\r\n                  {submenus}\r\n              </div>\r\n          </div>\r\n      );\r\n  }\r\n\r\n  renderColumns(category) {\r\n      if (category.items) {\r\n          const columnClassName = this.getColumnClassName(category);\r\n\r\n          return (\r\n              category.items.map((column, index) => {\r\n                  return this.renderColumn(category, column, index, columnClassName);\r\n              })\r\n          );\r\n      }\r\n\r\n      return null;\r\n  }\r\n\r\n  renderCategoryPanel(category) {\r\n      if (category.items) {\r\n        const columns = this.renderColumns(category);\r\n\r\n        return (\r\n            <div className=\"dropdown-menu show\">\r\n                <div className=\"row\">\r\n                    {columns}\r\n                </div>\r\n            </div>\r\n        );\r\n      }\r\n\r\n      return null;\r\n  }\r\n\r\n  renderCategory(props, index) {\r\n      const category = props.model\r\n      const linkClassName = classNames('menuitem-link', {'p-disabled': category.disabled});\r\n      const iconClassName = classNames('fa', category.icon);\r\n      const icon = category.icon && <span className={iconClassName}></span>;\r\n      const label = props.label && <span className=\"p-menuitem-text\">{props.label}</span>;\r\n      const submenuIcon = this.renderSubmenuIcon(category);\r\n      const panel = () => {\r\n        if (this.state.activeItem) {\r\n            return this.renderCategoryPanel(category);\r\n        } else {\r\n            return null;\r\n        }\r\n      };\r\n        \r\n\r\n      return (\r\n          <NavBtn key={props.label + '_' + index} \r\n            onMouseEnter={e => this.onCategoryMouseEnter(e, category)} >\r\n            <Link to={category.url || '/'} \r\n            className={linkClassName} \r\n            target={category.target} \r\n            onClick={e => this.onCategoryClick(e, category)}\r\n            aria-haspopup={category.items != null} \r\n            aria-expanded=\"true\">\r\n                {icon}\r\n                {label}\r\n                {submenuIcon}\r\n            </Link>\r\n            {panel()}\r\n          </NavBtn>\r\n      );\r\n  }\r\n\r\n  renderMenu() {\r\n      if (this.props.model) {\r\n        return this.renderCategory(this.props);\r\n      }\r\n\r\n      return null;\r\n  }\r\n\r\n\r\n  render() {\r\n    const menu = this.renderMenu();\r\n    console.log(this.state.activeItem)\r\n    return menu;\r\n  }\r\n}\r\n\r\nexport default MegaMenu;  ","C:\\Users\\yasen.ivanov\\Documents\\shop-app-react\\shop-app-react\\src\\Components\\header\\NavBtn.js",[],"C:\\Users\\yasen.ivanov\\Documents\\shop-app-react\\shop-app-react\\src\\Components\\main\\Main.js",["54"],"C:\\Users\\yasen.ivanov\\Documents\\shop-app-react\\shop-app-react\\src\\Components\\main\\LazyLoadedCarousel.js",[],"C:\\Users\\yasen.ivanov\\Documents\\shop-app-react\\shop-app-react\\src\\Components\\main\\InfoBox.js",["55","56","57"],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"58","replacedBy":"62"},{"ruleId":"60","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":209,"column":13,"nodeType":"66","messageId":"67","endLine":209,"endColumn":22},{"ruleId":"64","severity":1,"message":"68","line":15,"column":11,"nodeType":"66","messageId":"67","endLine":15,"endColumn":17},{"ruleId":"69","severity":1,"message":"70","line":8,"column":40,"nodeType":"71","endLine":8,"endColumn":52},{"ruleId":"72","severity":1,"message":"73","line":8,"column":40,"nodeType":"71","endLine":8,"endColumn":52},{"ruleId":"72","severity":1,"message":"73","line":10,"column":29,"nodeType":"71","endLine":10,"endColumn":41},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],["74"],["75"],"no-unused-vars","'className' is assigned a value but never used.","Identifier","unusedVar","'LiMain' is assigned a value but never used.","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]